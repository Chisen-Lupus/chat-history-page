\ProvidesPackage{chat-history}

\RequirePackage[dvipsnames]{xcolor}
\RequirePackage{graphicx}
\RequirePackage{tikz}
\RequirePackage{calc} % Required for width calculations
\usetikzlibrary{fit}
\usetikzlibrary{calc}
\newlength{\textlen}

% Define avatar and chat commands
% |    avatar     | bubble           |
% | 0.5cm | 0.7cm | \textwidth-2.4cm |
\newcommand{\newchatperson}[4][]{%
    \expandafter\newcommand\csname #2\endcsname[1]{%
        % Measure the text width
        \settowidth{\textlen}{##1}
        
        \makebox[\textwidth][l]{% Left-align the entire TikZ picture
        \begin{tikzpicture}[baseline=(current bounding box.north)]
            % Avatar circle with inscribed image
            \begin{scope}
                \clip (0,0) circle(0.5cm); % Clip the avatar image to a circle
                \node[anchor=center,inner sep=0pt,minimum size=1cm] (avatar) at (0,0)
                {\includegraphics[width=1cm,height=1cm,keepaspectratio]{#3}};
            \end{scope}

            % Name positioned above the bubble and right of avatar
            % \node[anchor=north west,text=gray] at (0.9,0.5) {\textbf{#4}};
            \node[anchor=north west,text=gray] at (0.7cm,0.5cm) {#4};
            
            % Decide dynamically whether to use text width or not
            \ifdim\textlen>\dimexpr\textwidth-2.9cm\relax
                % Long text: use text width
                % NOTE: 'draw' gives a border
                % NOTE: 2.9cm = two avatars 1.2cm*2 + anchor shift 0.5cm
                \node[anchor=north west,rounded corners=0.2cm,fill={#1!20},
                text=black,align=left,inner sep=0.7em,
                text width={\dimexpr\textwidth-2.9cm\relax}] at (0.7cm,-0.2cm) {##1};
            \else
                % Short text: fit naturally
                \node[anchor=north west,rounded corners=0.2cm,fill={#1!20},
                text=black,align=left,inner sep=0.7em] at (0.7cm,-0.2cm) {##1};
            \fi
        \end{tikzpicture}%%
        }
        \par
        \vspace{1ex} % Ensure line break after each bubble
    }
}

% Define avatar and chat commands
\newcommand{\newchathost}[4][]{%
    \expandafter\newcommand\csname #2\endcsname[1]{%
        % Measure the text width
        \settowidth{\textlen}{##1}
        
        \makebox[\textwidth][r]{% Right-align the entire TikZ picture
        \begin{tikzpicture}[baseline=(current bounding box.north)]
            % Avatar circle with inscribed image
            \begin{scope}
                \clip (0,0) circle(0.5cm); % Clip the avatar image to a circle
                \node[anchor=center,inner sep=0pt,minimum size=1cm] (avatar) at (0,0)
                {\includegraphics[width=1cm,height=1cm,keepaspectratio]{#3}};
            \end{scope}

            % Name positioned above the bubble and left of avatar
            \node[anchor=north east,text=gray] at (-0.7cm,0.5cm) {{#4}};
            
            % Decide dynamically whether to use text width or not
            \ifdim\textlen>\dimexpr\textwidth-2.9cm\relax
                % Long text: use text width
                \node[anchor=north east,rounded corners=0.2cm,fill={#1!20},
                text=black,align=left,inner sep=0.7em,
                text width={\dimexpr\textwidth-2.9cm\relax}] at (-0.7cm,-0.2cm) {##1};
            \else
                % Short text: fit naturally
                \node[anchor=north east,rounded corners=0.2cm,fill={#1!20},
                text=black,align=left,inner sep=0.7em] at (-0.7cm,-0.2cm) {##1};
            \fi
        \end{tikzpicture}%
        }
        \par
        \vspace{1ex} % Ensure line break after each bubble
    }
}

% Define context command
\newcommand{\context}[1]{%
    \vspace{1ex}
    \begin{center}%
        \textcolor{gray}{\small ------ #1 ------}%
    \end{center}%
    \par
    \vspace{-3ex}
}

% % Define subsection style
% \renewcommand{\subsection}[1]{%
%     \par\vspace{1em}%
%     \noindent\textbf{#1}\\[-0.5em] % Line break with negative vertical space to adjust spacing
%     \noindent\rule{\textwidth}{0.5pt}\vspace{0.5em}%
% }

\newcommand{\avatarWithText}[4]{%
    \begin{scope}
        \clip (#1, #2) circle(0.3cm);
        \node[anchor=center,inner sep=0pt,minimum size=1cm] at (#1, #2)
        {\includegraphics[width=0.6cm,height=0.6cm,keepaspectratio]{#3}};
    \end{scope}
    \node[anchor=west,text=gray] at ($(#1 + 0.5cm, #2)$) {#4};
}

% No paragraph indentation
\setlength{\parindent}{0pt}

\endinput
